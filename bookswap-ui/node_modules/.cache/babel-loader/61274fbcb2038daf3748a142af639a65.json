{"ast":null,"code":"var _jsxFileName = \"/Users/ragir/Desktop/bookswap workspace/bookswap-ui/src/PrivateRoute.js\";\nimport React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport store from './store/';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      const newProps = store.getState();\n      const {\n        token\n      } = newProps.userReducer;\n      let component;\n\n      if (token) {\n        component = /*#__PURE__*/_jsxDEV(Component, { ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 23\n        }, this);\n      } else {\n        component = /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: '/',\n            state: {\n              from: props.location\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this);\n      }\n\n      return component;\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/ragir/Desktop/bookswap workspace/bookswap-ui/src/PrivateRoute.js"],"names":["React","Redirect","Route","store","PrivateRoute","component","Component","rest","props","newProps","getState","token","userReducer","pathname","state","from","location"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;AACA,OAAOC,KAAP,MAAkB,UAAlB;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAC1D,sBACE,QAAC,KAAD,OACMA,IADN;AAEE,IAAA,MAAM,EAAGC,KAAD,IAAW;AACjB,YAAMC,QAAQ,GAAGN,KAAK,CAACO,QAAN,EAAjB;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAYF,QAAQ,CAACG,WAA3B;AACA,UAAIP,SAAJ;;AAEA,UAAIM,KAAJ,EAAW;AACTN,QAAAA,SAAS,gBAAG,QAAC,SAAD,OAAeG;AAAf;AAAA;AAAA;AAAA;AAAA,gBAAZ;AACD,OAFD,MAEO;AACLH,QAAAA,SAAS,gBACP,QAAC,QAAD;AACE,UAAA,EAAE,EAAE;AACFQ,YAAAA,QAAQ,EAAE,GADR;AAEFC,YAAAA,KAAK,EAAE;AAAEC,cAAAA,IAAI,EAAEP,KAAK,CAACQ;AAAd;AAFL;AADN;AAAA;AAAA;AAAA;AAAA,gBADF;AAQD;;AACD,aACEX,SADF;AAGD;AAtBH;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CA3BD;;KAAMD,Y;AA6BN,eAAeA,YAAf","sourcesContent":["import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport store from './store/';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        const newProps = store.getState();\n        const { token } = newProps.userReducer;\n        let component;\n\n        if (token) {\n          component = <Component {...props} />;\n        } else {\n          component = (\n            <Redirect\n              to={{\n                pathname: '/',\n                state: { from: props.location },\n              }}\n            />\n          );\n        }\n        return (\n          component\n        );\n      }}\n    />\n  );\n};\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}