{"ast":null,"code":"var _jsxFileName = \"/Users/ragir/Desktop/bookswap workspace/bookswap-ui/src/Login.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { InputGroup, FormControl, Button } from 'react-bootstrap';\nimport { API_BASE_URL } from './constants';\nimport { Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      usernameOrEmail: \"\",\n      password: \"\",\n      shouldRedirect: false\n    };\n\n    this.login = () => {\n      fetch(API_BASE_URL + '/api/auth/signin', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json, text/plain, */*',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          usernameOrEmail: this.state.usernameOrEmail,\n          password: this.state.password\n        })\n      }).then(res => res.json()).then(res => {\n        console.log(res);\n\n        if (res.accessToken && res.username) {\n          this.setState({\n            shouldRedirect: true\n          });\n          this.props.setUser({\n            token: res.accessToken,\n            username: res.username\n          });\n        }\n      });\n    };\n  }\n\n  // write function to call signup (google about fetch)\n  // write function to call login (this will return accessToken and username in response. Store them in redux)\n  // like this\n  // if (accessToken && username) {\n  //     this.props.setUser({ token: accessToken, username: username })\n  // }\n  // we save the token here to redux so that in some other file, when calling an authenticated api, we can get the token easily from redux (refer Library.js and Books.js)\n  // google about react redux\n  render() {\n    const redirect = this.state.shouldRedirect ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/books\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 54\n    }, this) : null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [redirect, /*#__PURE__*/_jsxDEV(InputGroup, {\n        size: \"sm\",\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n          children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n            id: \"inputGroup-sizing-sm\",\n            children: \"Username/Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          value: this.state.usernameOrEmail,\n          onChange: e => this.setState({\n            usernameOrEmail: e.target.value\n          }),\n          \"aria-label\": \"Small\",\n          \"aria-describedby\": \"inputGroup-sizing-sm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n          children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n            id: \"inputGroup-sizing-default\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          \"aria-label\": \"Default\",\n          \"aria-describedby\": \"inputGroup-sizing-default\",\n          value: this.state.password,\n          onChange: e => this.setState({\n            password: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: this.login,\n        children: \"LOGIN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  setUser: data => {\n    const action = {\n      type: 'SET_USER',\n      payload: data\n    };\n    return dispatch(action);\n  }\n});\n\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/ragir/Desktop/bookswap workspace/bookswap-ui/src/Login.js"],"names":["React","Component","connect","InputGroup","FormControl","Button","API_BASE_URL","Redirect","Login","state","usernameOrEmail","password","shouldRedirect","login","fetch","method","headers","body","JSON","stringify","then","res","json","console","log","accessToken","username","setState","props","setUser","token","render","redirect","e","target","value","mapDispatchToProps","dispatch","data","action","type","payload"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { InputGroup, FormControl, Button } from 'react-bootstrap'\nimport { API_BASE_URL } from './constants'\nimport { Redirect } from 'react-router-dom'\n\nclass Login extends Component {\n\n    state = {\n        usernameOrEmail: \"\",\n        password: \"\",\n        shouldRedirect: false\n      };\n\n      login = () => {\n        fetch(API_BASE_URL + '/api/auth/signin', {\n            method: 'post',\n            headers: {\n              'Accept': 'application/json, text/plain, */*',\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({usernameOrEmail: this.state.usernameOrEmail, password: this.state.password})\n          }).then(res => res.json())\n            .then(res => {\n                console.log(res)\n                if (res.accessToken && res.username) {\n                        this.setState({shouldRedirect: true})\n                        this.props.setUser({ token: res.accessToken, username: res.username })\n                    }\n            }\n            );\n      }\n\n    // write function to call signup (google about fetch)\n\n\n    // write function to call login (this will return accessToken and username in response. Store them in redux)\n    // like this\n    // if (accessToken && username) {\n    //     this.props.setUser({ token: accessToken, username: username })\n    // }\n    // we save the token here to redux so that in some other file, when calling an authenticated api, we can get the token easily from redux (refer Library.js and Books.js)\n    // google about react redux\n\n    render() {\n        const redirect = this.state.shouldRedirect ? <Redirect to=\"/books\" />: null\n        return (\n            \n            <div>\n                {redirect}\n\n                <InputGroup size=\"sm\" className=\"mb-3\">\n                    <InputGroup.Prepend>\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">Username/Email</InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <FormControl \n                        value={this.state.usernameOrEmail}\n                        onChange={e => this.setState({ usernameOrEmail: e.target.value })}\n                        aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" />\n                </InputGroup>\n                <br />\n                <InputGroup className=\"mb-3\">\n                    <InputGroup.Prepend>\n                        <InputGroup.Text id=\"inputGroup-sizing-default\">Password</InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <FormControl\n                        aria-label=\"Default\"\n                        aria-describedby=\"inputGroup-sizing-default\"\n                        value={this.state.password}\n                        onChange={e => this.setState({ password: e.target.value })}\n                    />\n                </InputGroup>\n                <Button\n                    onClick={this.login}\n                >LOGIN</Button>\n\n\n                {/* sign up/login page, with email, username, password, name, area, city, state, country. (if email or username is already registered, we will throw error). */}\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    setUser: (data) => {\n        const action = {\n            type: 'SET_USER',\n            payload: data\n        }\n        return dispatch(action)\n    }\n})\n\nexport default connect(null, mapDispatchToProps)(Login)"]},"metadata":{},"sourceType":"module"}