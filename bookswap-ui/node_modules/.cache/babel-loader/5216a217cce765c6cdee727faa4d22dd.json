{"ast":null,"code":"var _jsxFileName = \"/Users/ragir/Desktop/bookswap workspace/bookswap-ui/src/Books.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Books extends Component {\n  // state = {\n  //     message: \"\",\n  //     stompClient: null\n  // }\n  // write a function to call nearby books api\n  // componentDidMount(){\n  // this.connect();\n  // if(this.props.user.username === 'rags2095'){\n  //     this.sendMessage();\n  // }\n  // }\n  // connect = () => {\n  //     const Stomp = require(\"stompjs\");\n  //     var SockJS = require(\"sockjs-client\");\n  //     SockJS = new SockJS(\"http://localhost:8080/ws\");\n  //     this.setState({stompClient: Stomp.over(SockJS)});\n  //     this.state.stompClient.connect({}, this.onConnected, this.onError);\n  //   };\n  //    onConnected = () => {\n  //     console.log(\"connected\");\n  //     this.state.stompClient.subscribe(\n  //       \"/user/\" + this.props.user.username + \"/queue/messages\",\n  //       this.onMessageReceived\n  //     );\n  //   };\n  //    onError = (err) => {\n  //     console.log(err);\n  //   };\n  //   onMessageReceived = (msg) => {\n  //     const notification = JSON.parse(msg.body);\n  //     console.log(notification)\n  //     this.setState({message: notification})\n  //   };\n  //    sendMessage = () => {\n  //        var recipientId = '';\n  //        if(this.props.user.username === 'rags2095'){\n  //         recipientId = 'sivani1913'\n  //        }\n  //        else{\n  //            recipientId = 'rags2095'\n  //        }\n  //     // if (msg.trim() !== \"\") {\n  //       const message = {\n  //         senderId: this.props.user.username,\n  //         recipientId: recipientId,\n  //         senderName: this.props.user.username,\n  //         recipientName: recipientId,\n  //         content: 'Hi '+ recipientId + '! This is a message from ' + this.props.user.username,\n  //         timestamp: new Date(),\n  //       };\n  //       this.state.stompClient.send(\"/app/chat\", {}, JSON.stringify(message));\n  //     // }\n  //   };\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.userReducer\n});\n\nexport default connect(mapStateToProps)(Books);","map":{"version":3,"sources":["/Users/ragir/Desktop/bookswap workspace/bookswap-ui/src/Books.js"],"names":["React","Component","connect","Books","render","mapStateToProps","state","user","userReducer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAE1B;AACA;AACA;AACA;AAEA;AAEA;AACI;AACA;AACA;AACA;AACJ;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEAG,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAvEyB;;AA0E9B,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChCC,EAAAA,IAAI,EAAED,KAAK,CAACE;AADoB,CAAZ,CAAxB;;AAIA,eAAeN,OAAO,CAACG,eAAD,CAAP,CAAyBF,KAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\n\nclass Books extends Component {\n\n    // state = {\n    //     message: \"\",\n    //     stompClient: null\n    // }\n\n    // write a function to call nearby books api\n    \n    // componentDidMount(){\n        // this.connect();\n        // if(this.props.user.username === 'rags2095'){\n        //     this.sendMessage();\n        // }\n    // }\n\n    // connect = () => {\n    //     const Stomp = require(\"stompjs\");\n    //     var SockJS = require(\"sockjs-client\");\n    //     SockJS = new SockJS(\"http://localhost:8080/ws\");\n    //     this.setState({stompClient: Stomp.over(SockJS)});\n    //     this.state.stompClient.connect({}, this.onConnected, this.onError);\n    //   };\n\n    //    onConnected = () => {\n    //     console.log(\"connected\");\n    //     this.state.stompClient.subscribe(\n    //       \"/user/\" + this.props.user.username + \"/queue/messages\",\n    //       this.onMessageReceived\n    //     );\n    //   };\n    \n    //    onError = (err) => {\n    //     console.log(err);\n    //   };\n\n    //   onMessageReceived = (msg) => {\n    //     const notification = JSON.parse(msg.body);\n    //     console.log(notification)\n    //     this.setState({message: notification})\n    //   };\n\n    //    sendMessage = () => {\n    //        var recipientId = '';\n    //        if(this.props.user.username === 'rags2095'){\n    //         recipientId = 'sivani1913'\n    //        }\n    //        else{\n    //            recipientId = 'rags2095'\n    //        }\n    //     // if (msg.trim() !== \"\") {\n    //       const message = {\n    //         senderId: this.props.user.username,\n    //         recipientId: recipientId,\n    //         senderName: this.props.user.username,\n    //         recipientName: recipientId,\n    //         content: 'Hi '+ recipientId + '! This is a message from ' + this.props.user.username,\n    //         timestamp: new Date(),\n    //       };\n    //       this.state.stompClient.send(\"/app/chat\", {}, JSON.stringify(message));\n    \n    //     // }\n    //   };\n\n    render() {\n        return(\n            <div>\n                {/* {this.state.message} */}\n                {/* books page which will be sorted by nearest place and grouped by username, like [{username1: [book1, book2]}, {username2: [book2,book3,book4]}]. */}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.userReducer\n})\n\nexport default connect(mapStateToProps)(Books)"]},"metadata":{},"sourceType":"module"}